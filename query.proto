syntax = "proto3";

package EcdarProtoBuf;

option java_multiple_files = false;
option java_package = "EcdarProtoBuf";
option java_outer_classname = "QueryProtos";

import "component.proto";
import "objects.proto";

message IgnoredInputOutputs {
  repeated string ignored_inputs = 1;
  repeated string ignored_outputs = 2;
}

message ComponentsInfo {
  repeated Component components = 1;
  uint32 components_hash = 2;
}

message UserTokenResponse {
  int32 user_id = 1;
}

message QueryRequest {
  int32 user_id = 1;
  int32 query_id = 2;
  string query = 3;
  ComponentsInfo components_info = 4;
  IgnoredInputOutputs ignored_input_outputs = 5;
}

message QueryResponse { 
  oneof response {
    QueryOk query_ok = 1;
    UserTokenError user_token_error = 2;  
  }

  message QueryOk {
    int32 query_id = 1;

    message RefinementResult {
      bool success = 1;
      repeated StateTuple relation = 2;
      string reason = 3;
      StateTuple state = 4;
    }

    message ComponentResult { Component component = 1; }
    message ConsistencyResult {
      bool success = 1;
      string reason = 2;
      StateTuple state = 3;
    }
    message DeterminismResult {
      bool success = 1;
      string reason = 2;
      StateTuple state = 3;
    }
    message ImplementationResult {
      bool success = 1;
      string reason = 2;
      StateTuple state = 3;
    }
    message ReachabilityResult {
      bool success = 1;
      string reason = 2;
      StateTuple state = 3;
    }

    oneof result {
      RefinementResult refinement = 3;
      ComponentResult component = 4;
      ConsistencyResult consistency = 5;
      DeterminismResult determinism = 6;
      string error = 7;
      ImplementationResult implementation = 8;
      ReachabilityResult reachability = 9;
    }
  }
}

message UserTokenError {
  int32 user_id = 1;
  string error_message = 2;
}

message SimulationStartRequest {
  string component_composition = 1; // example: A || B || A
  ComponentsInfo components_info = 2;
}

message SimulationStepRequest {
  SimulationState current_state = 1;
  Decision chosen_decision = 2;
}

message SimulationStepResponse {
  SimulationState new_state = 1;
}